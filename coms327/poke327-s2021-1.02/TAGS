
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

poke327.c,1969
#define malloc(13,206
typedef struct path 19,350
  heap_node_t *hn;hn20,372
  uint8_t pos[pos21,391
  uint8_t from[from22,409
  int32_t cost;23,428
} path_t;24,444
typedef enum dim 26,455
  dim_x,27,474
  dim_y,28,483
  num_dims29,492
} dim_t;30,503
typedef int16_t pair_t[pair_t32,513
#define MAP_X 34,548
#define MAP_Y 35,578
#define MIN_TREES 36,608
#define MIN_BOULDERS 37,638
#define TREE_PROB 38,668
#define BOULDER_PROB 39,698
#define WORLD_SIZE 40,728
#define mappair(42,760
#define mapxy(43,817
#define heightpair(44,852
#define heightxy(45,915
typedef enum __attribute__ ((__packed__)) terrain_type 47,957
  ter_debug,48,1014
  ter_boulder,49,1027
  ter_tree,50,1042
  ter_path,51,1054
  ter_mart,52,1066
  ter_center,53,1078
  ter_grass,54,1092
  ter_clearing,55,1105
  ter_mountain,56,1121
  ter_forest57,1137
} terrain_type_t;58,1150
typedef struct map 60,1169
  terrain_type_t map[map61,1190
  uint8_t height[height62,1226
  int8_t n,63,1258
  int8_t n, s,63,1258
  int8_t n, s, e,63,1258
  int8_t n, s, e, w;63,1258
} map_t;64,1279
typedef struct queue_node 66,1289
  int x,67,1317
  int x, y;67,1317
  struct queue_node *next;next68,1329
} queue_node_t;69,1356
typedef struct world 71,1373
  map_t *world[world72,1396
  pair_t cur_idx;73,1436
  map_t *cur_map;cur_map74,1454
} world_t;75,1472
world_t world;79,1639
static int32_t path_cmp(81,1655
static int32_t edge_penalty(85,1778
static void dijkstra_path(90,1904
static int build_paths(188,5690
static int gaussian[gaussian279,7362
static int smooth_height(287,7525
static void find_building_location(444,11560
static int place_pokemart(475,13047
static int place_center(489,13339
static int map_terrain(502,13636
static int place_boulders(682,17999
static int place_trees(698,18323
static int new_map(717,18797
static void print_map(781,20697
void init_world(826,21603
void delete_world(832,21703
int main(846,21933
